mixin snapshotDetail(snapshot)
	- var pricem2 = Math.round(snapshot.price / snapshot.area)
	.lastDate
		a(href=`../listing/${snapshot.snapshotDate}/${snapshot.id}.html`)
			=new Intl.DateTimeFormat("pl-PL", { day: 'numeric', month: 'long' }).format(fn.parseDate(snapshot.snapshotDate))
	.pricem2= fn.formatMoney(pricem2) + '/m²'

doctype html
html(lang="pl")
	head
		meta(charset='utf-8')
		title= 'Report'
		link(rel='stylesheet', type='text/css', href=`../report.css?${Math.random()}`)
	body
		include chart
		div#container
			input(type='checkbox', data-kind='filter', id='showEnded')
			label(for='showEnded', data-kind='filter') Ended
			input(type='checkbox', data-kind='filter', id='showBanned')
			label(for='showBanned', data-kind='filter') Banned
			
			input(type='radio', data-kind='sort', name='sort', id='priceAsc', value='priceAsc')
			label(for='priceAsc', data-kind='sort') Price ↑
			input(type='radio', data-kind='sort', name='sort', id='priceDesc', value='priceDesc')
			label(for='priceDesc', data-kind='sort') Price ↓
			input(type='radio', data-kind='sort', name='sort', id='areaAsc', value='areaAsc')
			label(for='areaAsc', data-kind='sort') Area ↑
			input(type='radio', data-kind='sort', name='sort', id='areaDesc', value='areaDesc', checked=true)
			label(for='yearDesc', data-kind='sort') Area ↓

			div(class='auctions')
				each auction, auctionId in report
					- var firstSnapshot = auction.snapshots[0]
					- var lastSnapshot = auction.snapshots.at(-1)
					- var priceChange = Math.round((lastSnapshot.price - firstSnapshot.price) / firstSnapshot.price * 100)
					- var banned = bannedUrls.includes(lastSnapshot.url) ? 'banned' : ''
					- var fav = favUrls.includes(lastSnapshot.url) ? 'fav' : ''
					- var dead = deadUrls.includes(lastSnapshot.url) ? 'dead' : ''
					- var ended = auction.ended ? 'ended' : ''
					- var new_ = auction.new ? 'new' : ''
					- var className = ['auction', banned, fav, dead, ended, new_].join(' ')
					- var area = `--area: ${parseInt(lastSnapshot.area)}`
					- var price = `--price: ${lastSnapshot.price}`
					- var style = [area, price].join('; ')
					- var age = Math.floor(fn.age(fn.parseDate(firstSnapshot.snapshotDate)) / (356/2) * 100)
					- var firstAuction = fn.parseDate(firstSnapshot.snapshotDate).toRelative({ locale: 'pl-PL'})
					div(class=className, style=style, data-price-drop=priceChange < 0, data-price-rise=priceChange > 0)
						- var snapshots = auction.snapshots.toReversed()
						a(class='otodomAuctionLink', href=lastSnapshot.url, target='_blank', style="--background: url('" + lastSnapshot.imgUrls[0] + "')" )
						.age(style=`--first-auction: '${firstAuction}'; --age: ${age}%`)
							| #{firstAuction}
						.header(style=`--first-auction: '${firstAuction}'; --age: ${age}%`)
							.title= lastSnapshot.title
							.priceChange
								| #{priceChange}%
						.summary
							.street= lastSnapshot.address.street 
							.floor= lastSnapshot.floor == 0 ? 'parter' : `${lastSnapshot.floor}. piętro`
						.details
							.area= Math.round(lastSnapshot.area) + 'm²'
							.price= fn.formatMoney(lastSnapshot.price)
						.history(style=`--snapshots-count: ${snapshots.length-1};`)
							- var chronos = snapshots.toReversed().map(s => ({ date: s.snapshotDate, price: s.price }))
							+chart(auctionId, scale, chronos, fn)
							details
								summary.snapshot
									+ snapshotDetail(snapshots[0])
							.snapshots
								each snapshot, index in snapshots.splice(1)
									.snapshot
										+ snapshotDetail(snapshot)
									

